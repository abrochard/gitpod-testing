version: '3.8'

volumes:
  mysql-data:

services:
  elasticsearch:
    image: elasticsearch:7.8.0
    container_name: es
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastic
  logstash:
    image: logstash:7.8.0
    container_name: log
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./logstash/pipeline/logstash-nginx.config:/usr/share/logstash/pipeline/logstash-nginx.config
      - ./logstash/nginx.log:/home/nginx.log
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
    networks:
      - elastic
    command: logstash -f /usr/share/logstash/pipeline/logstash-nginx.config
  kibana:
    image: kibana:7.8.0
    container_name: kib
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic
  mysql:
    image: mysql:5.6
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_HOST=%
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_USER=asapp_readonly
      - MYSQL_PASSWORD=readonly
    volumes:
      - mysql-data:/var/lib/mysql
  redis:
    image: redis:latest
    ports:
      - 6379:6379

networks:
  elastic:
    driver: bridge
    # default MTU size in docker-compose is 1500
    driver_opts:
      com.docker.network.driver.mtu: 1440
